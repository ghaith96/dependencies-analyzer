{"version":3,"sources":["Api/Api.ts","Api/index.ts","Utils/types.ts","Components/UrlInput.tsx","Components/Card.tsx","Components/CardList.tsx","Components/Footer.tsx","Components/Header.tsx","Components/Loading.tsx","Utils/constants.ts","Services/UrlParser.ts","Services/Repository.ts","Utils/utils.ts","Components/ErrorComponents/WrongUrl.tsx","Components/ErrorComponents/NotFound.tsx","Components/ErrorComponents/GenericError.tsx","App.tsx","Utils/renderHelpers.tsx","index.tsx"],"names":["apiInstance","getPackageInfo","pkgName","a","url","options","headers","doRequest","response","data","collected","metadata","getPackages","fetch","json","responseJson","ok","status","AppError","UrlInput","urlProp","handleAnalyzeClick","loading","useState","setUrl","useEffect","onClick","View","style","content","TextInput","textInput","textContentType","value","onChangeText","onSubmitEditing","placeholder","TouchableOpacity","button","disabled","trim","onPress","Text","buttonText","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","padding","margin","fontSize","lineHeight","borderRadius","borderColor","borderWidth","marginStart","backgroundColor","color","Card","pkg","name","homePage","latestVersion","description","cardHeader","window","open","onLongPress","Clipboard","setString","descriptionContent","minHeight","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","spinnerDims","marginHorizontal","flexGrow","paddingTop","paddingStart","CardList","packages","FlatList","contentContainerStyle","renderItem","item","key","numColumns","centerContent","bounces","Footer","madeWith","role","aria-label","myName","marginTop","fontWeight","Header","header","marginVertical","Loading","percentage","ActivityIndicator","size","REGEX","Object","freeze","GITHUB_REPO","GITHUB_PACKAGE_FILE","GITHUB_RAW","getRawGitHubUrl","SOMETHING_WENT_WRONG","regexGroups","match","fromPackageFileToRaw","fromRepoToRaw","shift","join","repositoryService","apiService","cache","sessionStorage","packageName","cachedItem","getItem","JSON","parse","items","setItem","stringify","getPackagesFromApi","rawUrl","WRONG_URL_FORMAT","packagesComparer","b","length","WrongUrl","examplesContainer","example","NotFound","headerContent","error","GenericError","App","props","setState","lastError","fetchPackages","dependencies","keys","packagesCount","forEach","then","handleNewPackage","console","stillLoading","state","sort","tryParseUrl","isValidUrl","location","pathname","replace","this","Math","floor","NOT_FOUND","BAD_REQUEST","getErrorComponent","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.628e8ef1.chunk.js","sourcesContent":["import { Response } from './types';\r\n\r\nexport interface IApi {\r\n    getPackageInfo: <T>(pkgName: string) => Promise<Response<T>>;\r\n    getPackages: <T>(url: string) => Promise<Response<T>>;\r\n}\r\n\r\nclass Api implements IApi {\r\n    getPackageInfo = async <T>(pkgName: string) => {\r\n        const url = `https://api.npms.io/v2/package/${pkgName}`;\r\n        const options = { headers: { 'Sec-Fetch-Mode': 'cors' } };\r\n        const response: any = await this.doRequest<T>(url, options);\r\n        response.data = response.data.collected.metadata;\r\n        return response as T;\r\n    }\r\n\r\n    getPackages = async <T>(url: string) => {\r\n        return await this.doRequest<T>(url);\r\n    }\r\n\r\n    doRequest = async <T>(url: string, options?: RequestInit): Promise<Response<T>> => {\r\n        try {\r\n            const response = await fetch(url, options);\r\n            const responseJson = await response.json();\r\n            if (response.ok) {\r\n                return { ok: true, status: response.status, data: responseJson };\r\n            } else {\r\n                return { ok: false, status: response.status, data: responseJson };\r\n            }\r\n        } catch (e) {\r\n            return { ok: false, status: 0, data: e };\r\n        }\r\n    }\r\n}\r\n\r\nexport const apiInstance: IApi = new Api();\r\n","export * from './Api';\r\nexport * from './types';\r\n","export enum AppError { WRONG_URL_FORMAT = 500, NOT_FOUND = 404, BAD_REQUEST = 400 };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput } from 'react-native';\r\n\r\ninterface IProps {\r\n    urlProp: string;\r\n    loading: boolean;\r\n    handleAnalyzeClick: (url: string) => void;\r\n}\r\n\r\nexport const UrlInput: React.FC<IProps> = ({ urlProp, handleAnalyzeClick, loading }) => {\r\n    const [url, setUrl] = useState(urlProp);\r\n\r\n    useEffect(() => { urlProp && handleAnalyzeClick(url); });\r\n\r\n    const onClick = () => url && handleAnalyzeClick(url);\r\n\r\n    return (\r\n        <View style={style.content}>\r\n            <TextInput\r\n                style={style.textInput}\r\n                textContentType={\"URL\"}\r\n                value={url}\r\n                onChangeText={(url) => setUrl(url)}\r\n                onSubmitEditing={onClick}\r\n                placeholder=\"Example: https://github.com/ghaith96/dependencies-analyzer\"\r\n            />\r\n            <TouchableOpacity\r\n                style={style.button}\r\n                disabled={(!url.trim() || loading)}\r\n                onPress={onClick}>\r\n                <Text style={style.buttonText}>Analyze</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 4,\r\n        margin: 12,\r\n    },\r\n    textInput: {\r\n        flex: 0.8,\r\n        padding: 8,\r\n        fontSize: 18,\r\n        lineHeight: 4,\r\n        borderRadius: 5,\r\n        borderColor: '#32908F',\r\n        borderWidth: 1,\r\n    },\r\n    button: {\r\n        marginStart: 8,\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: '#4ECDC4'\r\n    },\r\n    buttonText: {\r\n        color: '#F1F7EE',\r\n        fontSize: 18\r\n    },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Clipboard } from 'react-native';\r\nimport { Package } from '../Models/Package';\r\n\r\ninterface IProps {\r\n    pkg: Package;\r\n}\r\n\r\nexport const Card: React.FC<IProps> = ({ pkg }) => {\r\n    const { name, homePage, latestVersion, description } = pkg;\r\n    const openHomePage = () => homePage && window.open(homePage, '_blank');\r\n    const copyNameToClipboard = () => Clipboard.setString(name);\r\n\r\n    return (\r\n        <View style={style.content}>\r\n            <View style={style.cardHeader}>\r\n                <TouchableOpacity onPress={openHomePage} onLongPress={copyNameToClipboard}>\r\n                    <Text style={style.pkgName}>{name}</Text>\r\n                </TouchableOpacity>\r\n                <Text style={style.latestVersion}>{latestVersion}</Text>\r\n            </View>\r\n            <View style={style.descriptionContent}>\r\n                <Text style={style.description}>{description}</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        justifyContent: 'space-between',\r\n        padding: 12,\r\n        margin: 8,\r\n        borderRadius: 5,\r\n        minHeight: 150,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    spinnerDims: {\r\n        height: 150,\r\n        width: 300,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    cardHeader: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n    },\r\n    pkgName: {\r\n        fontSize: 24,\r\n        color: '#47BBB3'\r\n    },\r\n    latestVersion: {\r\n        marginHorizontal: 4,\r\n        fontSize: 12,\r\n    },\r\n    descriptionContent: {\r\n        flex: 1,\r\n        flexGrow: 1,\r\n        width: 300,\r\n        paddingTop: 8,\r\n        paddingStart: 8\r\n    },\r\n    description: {\r\n        fontSize: 20\r\n    },\r\n});\r\n","import React from 'react'\r\nimport { FlatList } from 'react-native';\r\nimport { Card } from './Card';\r\nimport { Package } from '../Models/Package';\r\n\r\ninterface IProps {\r\n    packages: Package[];\r\n}\r\n\r\nexport const CardList: React.FC<IProps> = ({ packages }) => {\r\n\r\n    return (\r\n        <FlatList\r\n            data={packages}\r\n            style={{ margin: 16 }}\r\n            contentContainerStyle={{ alignItems: 'center', justifyContent: 'center' }}\r\n            renderItem={({ item }: { item: Package }) => <Card key={item.name} pkg={item} />}\r\n            numColumns={5}\r\n            centerContent\r\n            bounces\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nexport const Footer: React.FC = () => {\r\n    const goToMyGithub = () => window.open('https://github.com/ghaith96', '_blank');\r\n\r\n    return (\r\n        <View style={style.content}>\r\n            <Text style={style.madeWith}>Made with <span role='img' aria-label='heart'>💖</span> by </Text>\r\n            <TouchableOpacity onPress={goToMyGithub}>\r\n                <Text style={style.myName}>ghaith</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n        marginTop: 8\r\n    },\r\n    madeWith: {\r\n        fontSize: 18\r\n    },\r\n    myName: {\r\n        color: '#5475AB',\r\n        fontSize: 18,\r\n        fontWeight: '600'\r\n    }\r\n})\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <View style={style.content}>\r\n            <Text style={style.header}>Dependencies Analyzer</Text>\r\n            <Text style={style.description}>get fast insight into any NodeJs project on GitHub by peeking at its dependencies</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        alignItems: 'center'\r\n    },\r\n    header: {\r\n        fontSize: 25,\r\n        color: '#47BBB3'\r\n    },\r\n    description: {\r\n        fontSize: 20,\r\n        marginVertical: 4,\r\n        marginStart: 8,\r\n        color: '#1A535C'\r\n    }\r\n})\r\n","import React from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\r\n\r\ninterface IProps {\r\n    percentage: number;\r\n}\r\n\r\nexport const Loading: React.FC<IProps> = ({ percentage }) => {\r\n    return (\r\n        <View style={style.content}>\r\n            <ActivityIndicator size={55} color={'#47BBB3'} />\r\n            <Text style={style.percentage}>{percentage}%</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    percentage: {\r\n        fontSize: 25,\r\n        marginHorizontal: 16\r\n    }\r\n})\r\n","export const REGEX = Object.freeze({\r\n    GITHUB_REPO: /github\\.com\\/(.*?)\\/(.*?)\\//i,\r\n    GITHUB_PACKAGE_FILE: /github\\.com\\/(.*)\\/(.*)\\/blob\\/(.*)\\/package.json/i,\r\n    GITHUB_RAW: /raw.githubusercontent\\.com\\/(?:.*){4}\\/package.json/i\r\n});\r\n\r\nexport const MESSAGES = Object.freeze({\r\n    SOMETHING_WENT_WRONG: 'if you are seeing this please feel free to open an issue in https://github.com/ghaith96/dependencies-analyzer\\nthe following info might help \\nerror:'\r\n});\r\n","import { REGEX } from \"../Utils/constants\";\r\n\r\nexport const getRawGitHubUrl = (url: string) => {\r\n    let regexGroups;\r\n    if ((regexGroups = url.match(REGEX.GITHUB_RAW))) { // declaration inside if is intended\r\n        return url\r\n    } else if ((regexGroups = `${url}/`.match(REGEX.GITHUB_PACKAGE_FILE))) { // declaration inside if is intended\r\n        return fromPackageFileToRaw(regexGroups)\r\n    } else if ((regexGroups = `${url}/`.match(REGEX.GITHUB_REPO))) { // declaration inside if is intended\r\n        return fromRepoToRaw(regexGroups)\r\n    }\r\n    return '';\r\n}\r\n\r\nconst fromPackageFileToRaw = (regexGroups: RegExpMatchArray) => {\r\n    regexGroups.shift();\r\n    return `https://raw.githubusercontent.com/${regexGroups.join('/')}/package.json`;\r\n}\r\n\r\nconst fromRepoToRaw = (regexGroups: RegExpMatchArray) => {\r\n    regexGroups.shift();\r\n    return `https://raw.githubusercontent.com/${regexGroups.join('/')}/master/package.json`;\r\n}\r\n","import { Package } from \"../Models/Package\";\r\nimport { getRawGitHubUrl } from \"./UrlParser\";\r\nimport { IApi, Response, apiInstance } from '../Api'\r\nimport { RepoPackages } from \"./types\";\r\nimport { AppError } from \"../Utils/types\";\r\n\r\ninterface IRepository {\r\n    getPackageInfo: (packageName: string) => Promise<Response<Package>>;\r\n    getPackages: (url: string) => Promise<Response<{ dependencies: object }>>;\r\n}\r\n\r\nclass Repository implements IRepository {\r\n    cache: Storage = window.sessionStorage;\r\n\r\n    constructor(private apiService: IApi) { }\r\n\r\n    getPackageInfo = async (packageName: string): Promise<Response<Package>> => {\r\n        const cachedItem: string | null = this.cache.getItem(packageName);\r\n\r\n        if (cachedItem) {\r\n            const item = JSON.parse(cachedItem);\r\n            return { ok: true, status: 200, data: item };\r\n        }\r\n\r\n        const response = await this.apiService.getPackageInfo<Package>(packageName);\r\n\r\n        if (response.ok) {\r\n            // this.cache.setItem(packageName, JSON.stringify(response.data));\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    getPackages = async (url: string): Promise<Response<RepoPackages>> => {\r\n        const cachedItem: string | null = this.cache.getItem(url);\r\n\r\n        if (cachedItem) {\r\n            const items = JSON.parse(cachedItem);\r\n            return { ok: true, status: 200, data: items };\r\n        }\r\n\r\n        const response = await this.apiService.getPackages<RepoPackages>(url);\r\n\r\n        if (response.ok) {\r\n            this.cache.setItem(url, JSON.stringify(response.data));\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    getPackagesFromApi = async (url: string) => {\r\n        const rawUrl = getRawGitHubUrl(url);\r\n\r\n        if (!rawUrl)\r\n            return { status: AppError.WRONG_URL_FORMAT };\r\n\r\n        const response = await this.apiService.getPackages<RepoPackages>(rawUrl);\r\n\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport const repositoryService: IRepository = new Repository(apiInstance);\r\n","import { REGEX } from \"./constants\"\r\nimport { Package } from \"../Models/Package\"\r\n\r\nexport const packagesComparer = (a: Package, b: Package) => {\r\n    if (!a.description)\r\n        return -1\r\n    else if (!b.description)\r\n        return 1\r\n    return (a.description.length - b.description.length)\r\n}\r\n\r\nexport const isValidUrl = (url: string) => {\r\n    if (url.match(REGEX.GITHUB_RAW) ||\r\n        url.match(REGEX.GITHUB_PACKAGE_FILE) ||\r\n        url.match(REGEX.GITHUB_REPO)) {\r\n        return url\r\n    }\r\n    return ''\r\n}\r\n","import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nexport const WrongUrl: React.FC = () => {\r\n    return (\r\n        <View style={style.content}>\r\n            <Text style={style.header}>Wrong URL format <span role='img' aria-label='dont-know'>🤷‍♂</span></Text>\r\n            <Text style={style.description}>Check the following valid examples <span role='img' aria-label='look-down'>👇</span></Text>\r\n            <View style={style.examplesContainer}>\r\n                <Text style={style.example}>• https://github.com/ghaith96/dependencies-analyzer (<em>given the repository has package.json in the base folder</em>)</Text>\r\n                <Text style={style.example}>• https://github.com/ghaith96/dependencies-analyzer/blob/master/package.json</Text>\r\n                <Text style={style.example}>• https://raw.githubusercontent.com/ghaith96/dependencies-analyzer/master/package.json</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        margin: 8,\r\n        marginHorizontal: 16\r\n    },\r\n    header: {\r\n        fontSize: 35,\r\n        color: '#FF6B6B'\r\n    },\r\n    description: {\r\n        fontSize: 20,\r\n        margin: 4\r\n    },\r\n    examplesContainer: {\r\n        marginStart: 12,\r\n        margin: 4\r\n    },\r\n    example: {\r\n        fontSize: 20,\r\n        marginVertical: 8\r\n    }\r\n});\r\n","import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nexport const NotFound: React.FC = () => {\r\n    return (\r\n        <View style={style.content}>\r\n            <View style={style.headerContent}>\r\n                <Text style={style.header}>GitHub responded with </Text>\r\n                <Text style={style.error}>404 NOT FOUND</Text>\r\n            </View>\r\n            <Text style={style.description}>Take note of the following <span role='img' aria-label='look-down'>👇</span> while investigating <span role='img' aria-label='investigate'>🧐</span></Text>\r\n            <View style={style.examplesContainer}>\r\n                <Text style={style.example}>• Make sure the repository is NodeJs project. (i.e: has <code>package.json</code> file)</Text>\r\n                <Text style={style.example}>• Try to submit an absolute url to the <code>package.json</code> file in the repository.</Text>\r\n                <Text style={style.example}>• Double check the submitted URL <span role='img' aria-label='luck'>🤞</span>.</Text>\r\n                <Text style={style.example}>• Private repositories are <em>NOT</em> supported.</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        margin: 8,\r\n        marginHorizontal: 16\r\n    },\r\n    headerContent: {\r\n        flexDirection: 'row'\r\n    },\r\n    header: {\r\n        fontSize: 35\r\n    },\r\n    error: {\r\n        color: '#FF6B6B',\r\n        fontSize: 35\r\n    },\r\n    description: {\r\n        fontSize: 20,\r\n        margin: 4\r\n    },\r\n    examplesContainer: {\r\n        marginStart: 12,\r\n        margin: 4\r\n    },\r\n    example: {\r\n        fontSize: 20,\r\n        marginVertical: 8\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\n\r\nexport const GenericError: React.FC = () => {\r\n    return (\r\n        <View style={style.content}>\r\n            <Text style={style.header}><span role='img' aria-label='sorry'>😓</span> Something went wrong somewhere..</Text>\r\n            <Text style={style.description}>SORRY! This shouldn't be happening.</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        alignItems: 'center',\r\n        marginVertical: 16\r\n    },\r\n    header: {\r\n        fontSize: 35,\r\n        color: '#FF6B6B'\r\n    },\r\n    description: {\r\n        marginHorizontal: 8,\r\n        fontSize: 20,\r\n        marginVertical: 8\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Header, Footer, CardList, UrlInput, Loading } from './Components';\r\nimport { repositoryService } from './Services/Repository';\r\nimport { packagesComparer, isValidUrl } from './Utils/utils';\r\nimport { getErrorComponent } from './Utils/renderHelpers';\r\nimport { Package } from './Models/Package';\r\nimport { Response } from './Api/types';\r\nimport { getRawGitHubUrl } from './Services/UrlParser';\r\nimport { AppError } from './Utils/types';\r\n\r\ninterface IState {\r\n    loading: boolean;\r\n    lastError: number;\r\n    packages: Package[],\r\n    packagesCount: number;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IState> {\r\n    constructor(props: never) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            lastError: -1,\r\n            packages: [],\r\n            packagesCount: 0,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const url = this.tryParseUrl();\r\n        const percentage = Math.floor((this.state.packages.length / this.state.packagesCount) * 100) || 0;\r\n        const { loading, lastError } = this.state;\r\n        return (\r\n            <View style={style.content}>\r\n                <Header />\r\n                <UrlInput loading={loading} urlProp={url} handleAnalyzeClick={this.getPackages} />\r\n                {\r\n                    lastError >= 0 ?\r\n                        getErrorComponent(lastError)\r\n                        :\r\n                        <>\r\n                            <CardList packages={this.state.packages} />\r\n                            {loading && <Loading percentage={percentage} />}\r\n                        </>\r\n                }\r\n                <Footer />\r\n            </View>\r\n        );\r\n    }\r\n\r\n    getPackages = async (url: string) => {\r\n        this.setState({ loading: true, packages: [], lastError: -1 });\r\n        const rawUrl = getRawGitHubUrl(url);\r\n\r\n        if (rawUrl) {\r\n            await this.fetchPackages(rawUrl);\r\n        } else {\r\n            this.setState({ loading: false, packages: [], lastError: AppError.WRONG_URL_FORMAT });\r\n        }\r\n    }\r\n\r\n    fetchPackages = async (url: string) => {\r\n        const response = await repositoryService.getPackages(url);\r\n        if (response.ok) {\r\n            const dependencies = Object.keys(response.data.dependencies);\r\n            this.setState({ packagesCount: dependencies.length })\r\n            dependencies.forEach(name => repositoryService.getPackageInfo(name).then(this.handleNewPackage, console.error))\r\n        } else {\r\n            this.setState({ loading: false, lastError: response.status });\r\n        }\r\n    }\r\n\r\n    handleNewPackage = (response: Response<Package>) => {\r\n        if (response.ok) {\r\n            const pkg = response.data;\r\n            const stillLoading = (this.state.packages.length + 1 < this.state.packagesCount);\r\n            let packages = [...this.state.packages, pkg];\r\n            packages = stillLoading ? packages : packages.sort(packagesComparer);\r\n            this.setState({ packages, loading: stillLoading });\r\n        }\r\n    }\r\n\r\n    tryParseUrl = () => {\r\n        const url = window.location.pathname.replace('/', '') + '/';\r\n        return isValidUrl(url);\r\n    }\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    content: {\r\n        margin: 8,\r\n        justifyContent: 'space-between'\r\n    }\r\n})\r\n","import React from 'react'\r\nimport { WrongUrl, NotFound, GenericError } from \"../Components/ErrorComponents\"\r\nimport { AppError } from './types';\r\n\r\nexport const getErrorComponent = (error: AppError) => {\r\n    switch (error) {\r\n        case AppError.WRONG_URL_FORMAT:\r\n            return <WrongUrl />\r\n        case AppError.NOT_FOUND:\r\n            return <NotFound />\r\n        case AppError.BAD_REQUEST:\r\n        default:\r\n            return <GenericError />\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}